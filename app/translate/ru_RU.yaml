---
lang_id: 1

messages:

errors:
  # Ошибки создаваемые AppError

  errUnexpectedInternal: # 418
    reason: "Внутренняя ошибка сервера [problem]"
    details:
      - "unexpected error"

  errInternal: # 500
    reason: "Внутренняя ошибка сервера"

  errSystem: # 503
    reason: "Системная ошибка сервера"

  errHttpClientUnauthorized: # 401
    reason: "Требуется авторизация пользователя"

  errHttpAccessForbidden: # 403
    reason: "Доступ к ресурсу отклонён"

  errHttpResourceNotFound: # 404
    reason: "Запрашиваемый ресурс не был найден"

  errHttpRequestParseData: # 422
    reason: "Тело запроса невалидное: '{{ .reason }}'"
    details:
      - "проверьте параметры запроса, правильность формата json и соответствующих ему типов"

  errUseCaseTemporarilyUnavailable: # 503
    reason: "Система временно не может обработать ваш запрос. Пожалуйста, повторите запрос позже"

  # Ошибки генерируемые валидатором (400).
  # ID формируется из "validator_err" и имени валидатора, которое указано
  # в `` поля структуры (например: min, max, required).
  # Можно использовать следующие переменные:
  #   {{ .name }} - название поля, где произошла ошибка;
  #   {{ .type }} - тип поля (например: int32);
  #   {{ .value }} - текущее значение поля;
  #   {{ .param }} - параметр валидатора (например: max=16 -> param=16);

  validator.err_required:
    reason: "Поле обязательно для заполнения"

  validator.err_min:
    reason: "Значение поля должно быть не менее {{ .param }} символов (текущее значение: {{ .value }})"

  validator.err_max:
    reason: "Значение поля должно быть не более {{ .param }} символов"

  validator.err_gte:
    reason: "Значение поля должно быть больше или равно {{ .param }} (текущее значение: {{ .value }})"

  validator.err_lte:
    reason: "Значение поля должно быть меньше или равно {{ .param }} (текущее значение: {{ .value }})"

  validator.err_http_url:
    reason: "Значение поля должно являться URL адресом (текущее значение: {{ .value }})"