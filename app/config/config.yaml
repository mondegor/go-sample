---
app_path:
debug: true

logger:
  prefix: go-sample
  level: debug

server:
  read_timeout: 30
  write_timeout: 30
  shutdown_timeout: 30

listen:
  type: port
  sock_name: app.sock
  bind_ip: 0.0.0.0
  port: 8080

storage:
  type: postgres
  host: 127.0.0.1
  port: 5432
  username: user_pg
  password: 123456
  database: db_pg
  max_pool_size: 2
  timeout: 30

redis:
  host: 127.0.0.1
  port: 6379
  password: 123456

file_storage:
  download_dir: "./downloads"

s3:
  host: 127.0.0.1
  port: 9000
  use_ssl: false
  username: admin # d4jrL7eXyKg7ZNdYdl2p
  password: 12345678 # qZkNDK1Hewb4GVEvzvZGRCVb5uU4ZCX9bKztlhvR

#sentry:
#  use: false
#  dsn: http://a3f690a558be44f6888cb421bcb283bb@127.0.0.1:9050/2

cors:
  allowed_origins:
    - http://localhost:3000
    - http://127.0.0.1:3000
  allowed_methods:
    - GET
    - POST
    - PATCH
    - DELETE
  allowed_headers:
    - Content-Type
  # exposed_headers:
  allow_credentials: true

translation:
  dir_path: "./translate"
  file_type: yaml
  lang_codes: # the first language is default
    - en
    - ru

client_sections:
  admin_api:
    caption: Admin API
    privilege: apiAdm
  public_api:
    caption: Public API
    privilege: apiPublic

modules_access:
  roles:
    dir_path: "./roles"
    file_type: yaml
    list: # the first role is the guest role
      - guests
      - administrators
  privileges:
    - apiAdm
    - apiPublic
  permissions:
    - modCatalogCategory
    - modCatalogProduct
    - modCatalogTrademark
    - modFileStationImageProxy

modules_settings:
  catalog_category:
    image:
      base_dir: "catalog/categories"
      bucket_name: bucket1 # from file_station.image_proxy.bucket_name
  file_station:
    image_proxy:
      host: http://127.0.0.1/
      url_path_root: "images"
      bucket_name: bucket1
      init_bucket: true