---
debugging:
  debug: true
  caller:
    deep: 3
    use_short_path: true
    # root_path:

logger:
  level: trace # debug, info, warn, error, fatal, trace
  json_format: false
  timestamp_format: TimeOnly # RFC3339, RFC3339Nano, DateTime, TimeOnly
  console_color: true
  caller:
    deep: 3
    # use_short_path: true
    # root_path:

servers:
  rest_server:
    read_timeout: 30s
    write_timeout: 30s
    shutdown_timeout: 60s
    listen:
      type: port
      sock_name: app.sock
      bind_ip: 0.0.0.0
      port: 8080

storage:
  type: postgres
  host: 127.0.0.1
  port: 5432
  username: user_pg
  password: 123456
  database: db_pg
  max_pool_size: 2
  timeout: 30s

redis:
  host: 127.0.0.1
  port: 6379
  password: 123456
  timeout: 30s

file_system:
  dir_mode: 0775
  create_dirs: true # check and create if not exists

s3:
  host: 127.0.0.1
  port: 9000
  use_ssl: false
  username: admin # d4jrL7eXyKg7ZNdYdl2p
  password: 12345678 # qZkNDK1Hewb4GVEvzvZGRCVb5uU4ZCX9bKztlhvR
  create_buckets: true # check and create if not exists

file_providers:
  image_storage:
    name: imageStorage
    bucket_name: go-sample-img
  image_storage2:
    name: imageStorage2
    root_dir: "./img"

#sentry:
#  use: false
#  dsn: http://a3f690a558be44f6888cb421bcb283bb@127.0.0.1:9050/2

cors:
  allowed_origins:
    - http://localhost:3000
    - http://127.0.0.1:3000
  allowed_methods:
    - GET
    - POST
    - PUT
    - PATCH
    - DELETE
  allowed_headers:
    - Content-Type
  # exposed_headers:
  allow_credentials: true

translation:
  dir_path: "./translate"
  lang_codes: # the first language is default
    - en_EN
    - ru_RU
  dictionaries:
    dir_path: "./translate/dict"
    list:
      - catalog/category

app_sections:
  admin_api:
    privilege: apiAdm
    auth:
      secret: "The secret for symmetric security key"
      audience: "127.0.0.1:80"
  public_api:
    privilege: apiPublic
    auth:
      secret: "The secret for symmetric security key"
      audience: "127.0.0.1:80"

access_control:
  roles:
    dir_path: "./roles"
    file_type: yaml
    list: # the first role is the guest role
      - guests
      - administrators
  privileges:
    - apiAdm
    - apiPublic
  permissions:
    - modCatalogCategory
    - modCatalogProduct
    - modCatalogTrademark
    - modFileStationImageProxy

modules_settings:
  catalog_category:
    image:
      file_provider: imageStorage # file_providers.image_storage or image_storage2
  file_station:
    image_proxy:
      host: http://127.0.0.1:8080/
      base_url: /img
      file_provider: imageStorage # file_providers.image_storage or image_storage2