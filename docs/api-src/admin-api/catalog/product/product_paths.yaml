/v1/catalog/products:
  get:
    summary: Метод получения списка товаров
    description: |
      Метод предназначен для получения списка всех товаров, сохранённых в БД

      Фильтр `App.Request.Query.Filter.SearchText` использует для поиска следующие поля:
      - article;
      - caption;

      Возможные значения `App.Request.Query.ListSorter.SortField`:
      - article
      - caption,default,asc;
      - price
      - createdAt;
      - updatedAt;

      Возможные значения `App.Request.Query.ListPager.PageSize`:
      - от 1 до 1000 (default: 50)

    operationId: getProductList
    tags:
      - Catalog.Product

    security:
      - bearerAuth: []

    parameters:
      - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
      - $ref: "#/components/parameters/App.Request.Header.CorrelationID"
      - $ref: "#/components/parameters/Custom.Request.Query.Filter.CategoryID"
      - $ref: "#/components/parameters/App.Request.Query.Filter.SearchText"
      - $ref: "#/components/parameters/Custom.Request.Query.Filter.TrademarkIDs"
      - $ref: "#/components/parameters/Custom.Request.Query.Filter.PriceMin"
      - $ref: "#/components/parameters/Custom.Request.Query.Filter.PriceMax"
      - $ref: "#/components/parameters/App.Request.Query.Filter.Statuses"
      - $ref: "#/components/parameters/App.Request.Query.ListSorter.SortField"
      - $ref: "#/components/parameters/App.Request.Query.ListSorter.SortDirection"
      - $ref: "#/components/parameters/App.Request.Query.ListPager.PageIndex"
      - $ref: "#/components/parameters/App.Request.Query.ListPager.PageSize"

    responses:
      "200":
        description: Получен список товаров
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: "#/components/schemas/Catalog.Products.AdminAPI.Response.Model.ProductList"
      "401":
        $ref: "#/components/responses/App.ResponseJson.Error401"
      "403":
        $ref: "#/components/responses/App.ResponseJson.Error403"
      "500":
        $ref: "#/components/responses/App.ResponseJson.Error5XX"

  post:
    summary: Метод добавления нового товара
    description: |-
      Метод предназначен для создания информации о новом товаре в БД

      **Ограничения и ошибки полей:**
      - categoryId: required,UUID (Catalog.Category::CategoryID)
      - article: required,unique,min=4,max=32,pattern=article
      - caption: required,max=128
      - trademarkId: required,gte=1
      - price: gte=0
    operationId: createProduct
    tags:
      - Catalog.Product

    security:
      - bearerAuth: []

    parameters:
      - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
      - $ref: "#/components/parameters/App.Request.Header.CorrelationID"

    requestBody:
      required: true
      content:
        application/json;charset=UTF-8:
          schema:
            $ref: "#/components/schemas/Catalog.Products.AdminAPI.Request.Model.CreateProduct"

    responses:
      "201":
        description: Информация о товаре успешно добавлена
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: "#/components/schemas/App.Response.Model.SuccessCreatedItemUint"
      "400":
        $ref: "#/components/responses/App.ResponseJson.Error400"
      "401":
        $ref: "#/components/responses/App.ResponseJson.Error401"
      "403":
        $ref: "#/components/responses/App.ResponseJson.Error403"
      "500":
        $ref: "#/components/responses/App.ResponseJson.Error5XX"

/v1/catalog/products/{productId}:
  get:
    summary: Метод получения товара
    description: Метод предназначен для получения информации о товаре из БД
    operationId: getProduct
    tags:
      - Catalog.Product

    security:
      - bearerAuth: []

    parameters:
      - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
      - $ref: "#/components/parameters/App.Request.Header.CorrelationID"
      - $ref: "#/components/parameters/Catalog.Products.AdminAPI.Request.Path.ProductID"

    responses:
      "200":
        description: Получена информация о товаре
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: "#/components/schemas/Catalog.Products.AdminAPI.Response.Model.Product"
      "401":
        $ref: "#/components/responses/App.ResponseJson.Error401"
      "403":
        $ref: "#/components/responses/App.ResponseJson.Error403"
      "404":
        $ref: "#/components/responses/App.ResponseJson.Error404"
      "500":
        $ref: "#/components/responses/App.ResponseJson.Error5XX"

  patch:
    summary: Метод сохранения товара
    description: |-
      Метод предназначен для сохранения информации о товаре в БД

      **Ограничения и ошибки полей:**
      - tagVersion: required,gte=1 | ErrVersionInvalid
      - article: omitempty,unique,min=4,max=32,pattern=article
      - caption: omitempty,max=128
      - trademarkId: omitempty,gte=1
      - price: omitempty,gte=0
    operationId: storeProduct
    tags:
      - Catalog.Product

    security:
      - bearerAuth: []

    parameters:
      - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
      - $ref: "#/components/parameters/App.Request.Header.CorrelationID"
      - $ref: "#/components/parameters/Catalog.Products.AdminAPI.Request.Path.ProductID"

    requestBody:
      required: true
      content:
        application/json;charset=UTF-8:
          schema:
            $ref: "#/components/schemas/Catalog.Products.AdminAPI.Request.Model.StoreProduct"

    responses:
      "204":
        description: Информация о товаре успешно сохранена
      "400":
        $ref: "#/components/responses/App.ResponseJson.Error400"
      "401":
        $ref: "#/components/responses/App.ResponseJson.Error401"
      "403":
        $ref: "#/components/responses/App.ResponseJson.Error403"
      "404":
        $ref: "#/components/responses/App.ResponseJson.Error404"
      "500":
        $ref: "#/components/responses/App.ResponseJson.Error5XX"

  delete:
    summary: Метод удаления товара
    description: Метод предназначен для удаления информации о товаре из БД
    operationId: removeProduct
    tags:
      - Catalog.Product

    security:
      - bearerAuth: []

    parameters:
      - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
      - $ref: "#/components/parameters/App.Request.Header.CorrelationID"
      - $ref: "#/components/parameters/Catalog.Products.AdminAPI.Request.Path.ProductID"

    responses:
      "204":
        description: Информация о товаре успешно удалена
      "401":
        $ref: "#/components/responses/App.ResponseJson.Error401"
      "403":
        $ref: "#/components/responses/App.ResponseJson.Error403"
      "404":
        $ref: "#/components/responses/App.ResponseJson.Error404"
      "500":
        $ref: "#/components/responses/App.ResponseJson.Error5XX"

/v1/catalog/products/{productId}/status:
  patch:
    summary: Метод изменения статуса товара
    description: |-
      Метод предназначен для изменения статуса товара в БД

      **Ограничения и ошибки полей:**
      - tagVersion: required,gte=1 | ErrVersionInvalid
      - status: required,enum | ErrSwitchStatusRejected
    operationId: changeProductStatus
    tags:
      - Catalog.Product

    security:
      - bearerAuth: []

    parameters:
      - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
      - $ref: "#/components/parameters/App.Request.Header.CorrelationID"
      - $ref: "#/components/parameters/Catalog.Products.AdminAPI.Request.Path.ProductID"

    requestBody:
      required: true
      content:
        application/json;charset=UTF-8:
          schema:
            $ref: "#/components/schemas/App.Request.Model.ChangeStatus"

    responses:
      "204":
        description: Статус товара успешно изменён
      "400":
        $ref: "#/components/responses/App.ResponseJson.Error400"
      "401":
        $ref: "#/components/responses/App.ResponseJson.Error401"
      "403":
        $ref: "#/components/responses/App.ResponseJson.Error403"
      "404":
        $ref: "#/components/responses/App.ResponseJson.Error404"
      "500":
        $ref: "#/components/responses/App.ResponseJson.Error5XX"

/v1/catalog/products/{productId}/move:
  patch:
    summary: Метод перемещения товара
    description: |-
      Метод предназначен для изменения позиции товара в рамках категории в БД

      **Ограничения и валидация:**
      - Не найдено поле, после которого необходимо вставить указанное поле;
    operationId: moveProduct
    tags:
      - Catalog.Product

    security:
      - bearerAuth: []

    parameters:
      - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
      - $ref: "#/components/parameters/App.Request.Header.CorrelationID"
      - $ref: "#/components/parameters/Catalog.Products.AdminAPI.Request.Path.ProductID"

    requestBody:
      required: true
      content:
        application/json;charset=UTF-8:
          schema:
            $ref: "#/components/schemas/App.Request.Model.MoveItem"

    responses:
      "204":
        description: Товар был успешно перемещён
      "400":
        $ref: "#/components/responses/App.ResponseJson.Error400"
      "401":
        $ref: "#/components/responses/App.ResponseJson.Error401"
      "403":
        $ref: "#/components/responses/App.ResponseJson.Error403"
      "404":
        $ref: "#/components/responses/App.ResponseJson.Error404"
      "500":
        $ref: "#/components/responses/App.ResponseJson.Error5XX"