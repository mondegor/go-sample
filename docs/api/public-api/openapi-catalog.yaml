---
openapi: 3.0.3
info:
  version: 0.3.0
  title: Public API категорий товаров
  description: Public REST API проекта go-sample категорий товаров
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  contact:
    name: Andrey Nazarov
servers:
  - url: http://localhost:8080/pub
    description: Local Host
tags:
  - name: Catalog.Categories
    description: Public API Categories of product catalog

paths:
  /v1/catalog/categories:
    get:
      summary: Метод получения списка категорий
      description: Метод предназначен для получения списка категорий со статусом ENABLED, сохраненных в БД
      operationId: getCategories
      tags:
        - Catalog.Categories

      parameters:
        - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
        - $ref: "#/components/parameters/App.Request.Header.CorrelationID"
        - $ref: "#/components/parameters/App.Request.Query.Filter.SearchText"
        - $ref: "#/components/parameters/App.Request.Query.ListSorter.SortField"
        - $ref: "#/components/parameters/App.Request.Query.ListSorter.SortDirection"
        - $ref: "#/components/parameters/App.Request.Query.ListPager.PageIndex"
        - $ref: "#/components/parameters/App.Request.Query.ListPager.PageSize"

      responses:
        "200":
          description: Получен список категорий
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Catalog.Categories.PublicAPI.Response.Model.CategoryList"
        "500":
          $ref: "#/components/responses/App.ResponseJson.Error5XX"

  /v1/catalog/categories/{categoryId}:
    get:
      summary: Метод получения категории
      description: Метод предназначен для получения информации об указанной категории со статусом ENABLED из БД
      operationId: getCategory
      tags:
        - Catalog.Categories

      parameters:
        - $ref: "#/components/parameters/App.Request.Header.AcceptLanguage"
        - $ref: "#/components/parameters/App.Request.Header.CorrelationID"
        - $ref: "#/components/parameters/Catalog.Categories.PublicAPI.Request.Path.CategoryID"

      responses:
        "200":
          description: Получена информация о категории
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Catalog.Categories.PublicAPI.Response.Model.Category"
        "404":
          $ref: "#/components/responses/App.ResponseJson.Error404"
        "500":
          $ref: "#/components/responses/App.ResponseJson.Error5XX"

components:

  parameters:
    App.Request.Header.AcceptLanguage:
      description: https://developer.mozilla.org/ru/docs/Web/HTTP/Headers/Accept-Language
      name: Accept-Language
      in: header
      required: false
      schema:
        type: string
        default: "ru"
      example: "ru;q=0.9, fr-CH, fr;q=0.8, en;q=0.7, *;q=0.5"

    App.Request.Header.CorrelationID:
      description: Уникальный идентификатор запроса
      name: CorrelationID
      in: header
      required: false
      schema:
        type: string
        format: uuid
      example: "f7479171-83d2-4f64-84ac-892f8c0aaf48"

    App.Request.Query.Filter.SearchText:
      description: Поисковая строка
      name: query
      in: query
      required: false
      schema:
        type: string
        maxLength: 128
      example: "перфокарта"

    App.Request.Query.ListPager.PageIndex:
      description: Индекс страницы списка с записями
      name: pageIndex
      in: query
      required: false
      schema:
        type: integer
        minimum: 0
        maximum: 1024
        default: 0
      example: 2

    App.Request.Query.ListPager.PageSize:
      description: Количество записей на страницу списка
      name: pageSize
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 1024
        default: 50
      example: 70

    App.Request.Query.ListSorter.SortField:
      description: Название колонки, по которой происходит сортировка
      name: sortField
      in: query
      required: false
      schema:
        type: string
      example: "caption"

    App.Request.Query.ListSorter.SortDirection:
      description: Направление сортировки
      name: sortDirection
      in: query
      required: false
      schema:
        description: |-
          Направление сортировки:
          - ASC - по возрастанию;
          - DESC - по убыванию;
        type: string
        enum:
          - ASC
          - DESC
        default: "ASC"
      example: "DESC"

    Catalog.Categories.PublicAPI.Request.Path.CategoryID:
      description: Идентификатор категории
      name: categoryId
      in: path
      required: true
      schema:
        type: integer
        minimum: 1
      example: 21

  schemas:
    App.Field.Caption:
      description: Название записи
      type: string
      maxLength: 128
      example: "Название"

    App.Field.ImageURL:
      description: URL к изображению записи
      type: string
      maxLength: 256
      example: "http://localhost/path/item-name.png"

    App.Field.IntegerID:
      description: Идентификатор записи
      type: integer
      minimum: 1
      example: 80402010

    App.Field.ListPager.Total:
      description: Количество записей в БД с учётом указанных в запросе фильтров
      type: integer
      minimum: 0
      example: 584

    App.Response.Model.Error: # RFC 7807 (Problem Details for HTTP APIs)
      description: DTO следующих ошибок - 401, 403, 404, 5XX
      type: object
      required:
        - title
        - detail
        - request
        - time
      properties:
        title:
          description: Краткое описание проблемы, понятное человеку
          type: string
          example: "Resource not found"
        detail:
          description: Описание конкретно возникшей ошибки, понятное человеку
          type: string
          example: "Resource [User] with id = [123456] not found. You MUST use PUT to add a resource instead of GET"
        request:
          description: Метод и URL запроса
          type: string
          example: "PUT /users/123456"
        time:
          description: Время возникновения ошибки с точностью до миллисекунд (UTC)
          type: string
          format: date-time
          example: "2023-01-01T12:00:00.000+02:00"
        errorTraceId:
          description: Идентификатор конкретного возникновения ошибки
          type: string
          example: "5add1be1-90ab5d42-02fa8b1f-672503f2"

    App.Response.Model.ErrorAttribute:
      description: DTO элемента ошибки 400
      type: object
      required:
        - id
        - value
      properties:
        id:
          description: Название атрибута, где произошла ошибка
          type: string
          example: "attributeName"
        value:
          description: Описание ошибки
          type: string
          example: "Атрибут не может быть пустым. Указано недопустимое значение атрибута"

    Catalog.Categories.PublicAPI.Response.Model.CategoryList:
      description: public DTO список торговых марок
      type: object
      required:
        - items
        - total
      properties:
        items:
          description: Список записей ограниченный фильтром и pageSize
          type: array
          items:
            $ref: "#/components/schemas/Catalog.Categories.PublicAPI.Response.Model.Category"
        total:
          $ref: "#/components/schemas/App.Field.ListPager.Total"

    Catalog.Categories.PublicAPI.Response.Model.Category:
      description: public DTO торговая марка
      type: object
      required:
        - id
        - caption
        - imagePath
      properties:
        id: # categoryId
          $ref: "#/components/schemas/App.Field.IntegerID"
        caption:
          $ref: "#/components/schemas/App.Field.Caption"
        imagePath: # Относительный путь к логотипу
          $ref: "#/components/schemas/App.Field.ImageURL"

  responses:
    App.ResponseJson.Error400:
      description: Некорректные входные данные. Возвращается список атрибутов с ошибками
      content:
        application/json;charset=UTF-8:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/App.Response.Model.ErrorAttribute"

    App.ResponseJson.Error404:
      description: Запрашиваемый ресурс не был найден
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/App.Response.Model.Error"

    App.ResponseJson.Error5XX:
      description: Внутренняя ошибка сервера
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/App.Response.Model.Error"

