---
openapi: 3.0.3
info:
  version: 0.1.1
  title: Public API категорий товаров
  description: Public REST API категорий товаров в формате OpenAPI v3
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  contact:
    name: Nazarov Andrey
servers:
  - url: http://localhost:8080
    description: Local Host
tags:
  - name: CatalogCategory
    description: Public Categories of products

paths:
  /public/v1/catalog/categories:
    get:
      summary: Метод получения списка категорий
      description: Метод предназначен для получения списка категорий со статусом ENABLED, сохраненных в БД
      operationId: getCatalogCategories
      tags:
        - CatalogCategory

      parameters:
        - $ref: "#/components/parameters/App.Request.Header.acceptLanguage"
        - $ref: "#/components/parameters/App.Request.Header.correlationId"

      responses:
        "200":
          description: Получен список категорий
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/App.Catalog.Model.CategoryList"
        "500":
          $ref: "#/components/responses/App.Response.Error5XX"

  /public/v1/catalog/categories/{categoryId}:
    get:
      summary: Метод получения категории
      description: Метод предназначен для получения информации об указанной категории со статусом ENABLED из БД
      operationId: getCatalogCategory
      tags:
        - CatalogCategory

      parameters:
        - $ref: "#/components/parameters/App.Request.Header.acceptLanguage"
        - $ref: "#/components/parameters/App.Request.Header.correlationId"
        - $ref: "#/components/parameters/App.Request.Path.categoryId"

      responses:
        "200":
          description: Получена информация о категории
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/App.Catalog.Model.Category"
        "404":
          $ref: "#/components/responses/App.Response.Error404"
        "500":
          $ref: "#/components/responses/App.Response.Error5XX"

components:

  parameters:
    App.Request.Header.acceptLanguage:
      description: https://developer.mozilla.org/ru/docs/Web/HTTP/Headers/Accept-Language
      name: Accept-Language
      in: header
      schema:
        type: string
      example: "ru;q=0.9, fr-CH, fr;q=0.8, en;q=0.7, *;q=0.5"

    App.Request.Header.correlationId:
      name: CorrelationID
      in: header
      schema:
        type: string
        format: uuid
        minLength: 36
        maxLength: 36
      example: "f7479171-83d2-4f64-84ac-892f8c0aaf48"

    App.Request.Path.categoryId:
      name: categoryId
      in: path
      required: true
      description: Идентификатор категории
      schema:
        type: integer
      example: 21

  schemas:
    App.Response.Model.Error: # RFC 7807 (Problem Details for HTTP APIs)
      type: object
      required:
        - title
        - detail
        - request
        - time
      properties:
        title:
          description: Краткое описание проблемы, понятное человеку
          type: string
          example: "Entity not found"
        detail:
          description: Описание конкретно возникшей ошибки, понятное человеку
          type: string
          example: "Entity [User] with id = [123456] not found. You MUST use PUT to add entity instead of GET"
        request:
          description: Метод и URL запроса
          type: string
          example: "PUT /users/123456"
        time:
          description: Время возникновения ошибки с точностью до миллисекунд
          type: string
          format: date-time
          example: "2023-01-01T12:00:00.000+02:00"
        errorTraceId:
          description: Идентификатор конкретного возникновения ошибки
          type: string
          example: "5add1be1-90ab5d42-02fa8b1f-672503f2"

    App.Response.Model.ErrorAttribute:
      type: object
      required:
        - id
        - value
      properties:
        id:
          description: Название атрибута, где произошла ошибка
          type: string
          example: "attributeName"
        value:
          description: Описание ошибки
          type: string
          example: "Атрибут не может быть пустым. Указано недопустимое значение атрибута"

    App.Catalog.Model.CategoryList:
      description: Список записей ограниченный фильтром и pageSize
      type: array
      items:
        $ref: "#/components/schemas/App.Catalog.Model.Category"

    App.Catalog.Model.Category:
      type: object
      properties:
        id: # categoryId, get
          type: integer
          example: 21
        caption: # get, create, store
          description: Название записи
          type: string
          maxLength: 64
          example: "Электроника"
        imagePath: # get
          description: Относительный путь к логотипу
          type: string
          maxLength: 128
          example: "Относительный путь к картинке"

  responses:
    App.Response.Error400:
      description: Некорректные входные данные. Возвращается список атрибутов с ошибками
      content:
        application/json;charset=UTF-8:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/App.Response.Model.ErrorAttribute"

    App.Response.Error404:
      description: Запрашиваемый ресурс не был найден
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/App.Response.Model.Error"

    App.Response.Error5XX:
      description: Внутренняя ошибка сервера
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/App.Response.Model.Error"