# Mapping ENV vars to ./app/config/config.go
# if ENV var not exists put default value from ./app/config/config.yaml

## App vars:
# APPX_NAME="Go Sample App"
# APPX_VER=v0.0.0
APPX_ENV=local-stand

## Log and debug:
# APPX_DEBUG=true
# APPX_ERR_CALLER_ENABLE=true
# APPX_ERR_CALLER_DEPTH=3
# APPX_LOG_LEVEL=trace # Log levels: info, warn, error, fatal, debug, trace
# APPX_LOG_TIMESTAMP=TimeOnly
# APPX_LOG_JSON=false
# APPX_LOG_COLOR=true

## Sentry:
# APPX_SENTRY_DSN=
# APPX_SENTRY_TRACES_SAMPLE_RATE=1.0

## Http server:
# APPX_SERVER_READ_TIMEOUT=5s
# APPX_SERVER_WRITE_TIMEOUT=5s
# APPX_SERVER_SHUTDOWN_TIMEOUT=15s
# APPX_SERVER_LISTEN_BIND=0.0.0.0
APPX_SERVER_LISTEN_PORT=8080

## Internal server:
# APPX_INTERNAL_SERVER_READ_TIMEOUT=5s
# APPX_INTERNAL_SERVER_WRITE_TIMEOUT=5s
# APPX_INTERNAL_SERVER_SHUTDOWN_TIMEOUT=15s
# APPX_INTERNAL_SERVER_LISTEN_BIND=0.0.0.0
APPX_INTERNAL_SERVER_LISTEN_PORT=8084

## Postgres:
# APPX_DB_HOST=db-postgres
# APPX_DB_PORT=5432
# APPX_DB_USER=user_pg
# APPX_DB_PASSWORD=123456
# APPX_DB_NAME=db_pg
APPX_DB_MIGRATIONS_TABLE=go_sample_migrations
# APPX_DB_MAX_POOL_SIZE=2

## Redis:
# APPX_REDIS_HOST=db-redis
# APPX_REDIS_PORT=6379
# APPX_REDIS_PASSWORD=123456

## S3:
# APPX_S3_HOST=s3-minio
# APPX_S3_PORT=9000
# APPX_S3_USESSL=true
# APPX_S3_USER=admin
# APPX_S3_PASSWORD=12345678
# APPX_S3_CREATE_BUCKETS=true

## File system (disabled):
# APPX_FILESYSTEM_DIR_MODE=0775
# APPX_FILESYSTEM_CREATE_DIRS=true

## File providers:
# APPX_IMAGESTORAGE2_ROOT_DIR=../img (disabled)
# APPX_IMAGE_HOST=http://go-sample.local/

## Cors:
# APPX_CORS_ALLOWED_ORIGINS=http://go-sample.local,http://localhost:3000,http://127.0.0.1:3000

## Translation:
# APPX_TRANSLATION_DIR_PATH=./translate
# APPX_TRANSLATION_LANGS=en_EN,ru_RU
# APPX_TRANSLATION_DICTIONARIES_DIR_PATH=./translate/dict

## App sections:
# APPX_ADMIN_API_AUTH_SECRET=secret
# APPX_ADMIN_API_AUTH_AUDIENCE=127.0.0.1:80

# APPX_PUBLIC_API_AUTH_SECRET=secret
# APPX_PUBLIC_API_AUTH_AUDIENCE=127.0.0.1:80

## Roles:
# APPX_ROLES_DIR_PATH=./roles

## ================================= MRCMD SECTION =================================

## System readonly vars: ${APPX_DIR}, ${CMD_SEPARATOR}
## System vars:
# MRCMD_PLUGINS_DIR=../mrcmd/plugins
APPX_PLUGINS_DIR=./scripts
MRCMD_SHARED_PLUGINS_ENABLED=global,pm,docker,docker-compose,go,go-migrate,nginx,minio,postgres,redis,golangci-lint,plantuml,traefik

## Global vars:
APPX_ID=go-sample
# APPX_WORK_DIR=./app
# HOST_USER_ID=1000
# HOST_GROUP_ID=1000
# APPX_TZ=Europe/Moscow

## Docker:
# DOCKER_PACKAGE_NAME = "p/"
# DOCKER_GENERAL_NETWORK=NULL

## Docker Compose:
# DOCKER_COMPOSE_CONFIG_DIR=${MRCMD_PLUGINS_DIR}/docker-compose
# DOCKER_COMPOSE_CONFIG_FILE_LAST=./docker-compose-app.yaml
# DOCKER_COMPOSE_NETWORK=${APPX_ID}-local-network

## Go alpine:
# GO_DOCKER_CONTAINER=${APPX_ID}-web-app
# GO_DOCKER_CONTEXT_DIR=${MRCMD_PLUGINS_DIR}/go/docker
# GO_DOCKER_DOCKERFILE=NULL
# GO_DOCKER_COMPOSE_CONFIG_DIR=${MRCMD_PLUGINS_DIR}/go/docker-compose
GO_DOCKER_IMAGE=p/go:1.22.8
GO_DOCKER_IMAGE_FROM=golang:1.22.8-alpine3.20
# GO_GOPATH_DIR=./.cache/golang
# GO_APPX_ENV_FILE=./.env
# GO_APPX_MAIN_FILE=./cmd/app/main.go
GO_IMPORTS_LOCAL_PREFIXES=github.com/mondegor/go-sample
##### GO_WEBAPP_PUBLIC_PORT=127.0.0.1:8080
GO_WEBAPP_INTERNAL_PORT=${APPX_SERVER_LISTEN_PORT}
# GO_WEBAPP_DOMAIN=go-sample.local
# GO_TOOLS_INSTALL_GOFUMPT_VERSION=latest
# GO_TOOLS_INSTALL_GOIMPORTS_VERSION=latest
# GO_TOOLS_INSTALL_GCI_VERSION=latest
GO_TOOLS_INSTALL_MOCKGEN_VERSION=v1.6.0
# GO_TOOLS_INSTALL_PROTOC_GEN_GO_VERSION=false
# GO_TOOLS_INSTALL_PROTOC_GEN_GO_GRPC_VERSION=false
# GO_TOOLS_INSTALL_PROTOC_GRPC_GATEWAY_VERSION=false
# GO_TOOLS_INSTALL_PROTOC_GEN_OPENAPIV2_VERSION=false

## Minio:
# MINIO_DOCKER_CONTAINER=${APPX_ID}-s3-minio
# MINIO_DOCKER_CONTEXT_DIR=${MRCMD_PLUGINS_DIR}/minio/docker
# MINIO_DOCKER_DOCKERFILE=NULL
# MINIO_DOCKER_COMPOSE_CONFIG_DIR=${MRCMD_PLUGINS_DIR}/minio/docker-compose
MINIO_DOCKER_IMAGE=p/minio:2024-07-13
MINIO_DOCKER_IMAGE_FROM=minio/minio:RELEASE.2024-07-13T01-46-15Z.fips
# MINIO_NGINX_DOCKER_CONTAINER=${APPX_ID}-s3-minio-nginx
MINIO_NGINX_DOCKER_IMAGE=p/nginx-minio:1.27.0
MINIO_NGINX_DOCKER_IMAGE_FROM=nginx:1.27.0-alpine3.19
# MINIO_API_PUBLIC_PORT=127.0.0.1:9000
# MINIO_API_INTERNAL_PORT=9000
# MINIO_API_USER=admin
# MINIO_API_PASSWORD=12345678
# MINIO_WEB_DOMAIN=minio.local
# MINIO_WEB_INTERNAL_PORT=9001

## Postgres:
# POSTGRES_DOCKER_CONTAINER=${APPX_ID}-db-postgres
# POSTGRES_DOCKER_CONTEXT_DIR=${MRCMD_PLUGINS_DIR}/postgres/docker
# POSTGRES_DOCKER_DOCKERFILE=NULL
# POSTGRES_DOCKER_COMPOSE_CONFIG_DIR=${MRCMD_PLUGINS_DIR}/postgres/docker-compose
POSTGRES_DOCKER_IMAGE=p/postgres:15.7
POSTGRES_DOCKER_IMAGE_FROM=postgres:15.7-alpine3.20
##### POSTGRES_DB_PUBLIC_PORT=127.0.0.1:5432
# POSTGRES_DB_USER=user_pg
# POSTGRES_DB_PASSWORD=123456
# POSTGRES_DB_NAME=db_pg

## Redis:
# REDIS_DOCKER_CONTAINER=${APPX_ID}-db-redis
# REDIS_DOCKER_CONTEXT_DIR=${MRCMD_PLUGINS_DIR}/redis/docker
# REDIS_DOCKER_DOCKERFILE=NULL
# REDIS_DOCKER_COMPOSE_CONFIG_DIR=${MRCMD_PLUGINS_DIR}/redis/docker-compose
REDIS_DOCKER_IMAGE=p/redis:7.2.5
REDIS_DOCKER_IMAGE_FROM=redis:7.2.5-alpine3.20
##### REDIS_PUBLIC_PORT=127.0.0.1:6379
# REDIS_PASSWORD=123456

## DB migrate utility:
# GO_MIGRATE_DOCKER_CONTEXT_DIR=${MRCMD_PLUGINS_DIR}/go-migrate/docker
# GO_MIGRATE_DOCKER_DOCKERFILE=NULL
GO_MIGRATE_DOCKER_IMAGE=p/go-migrate:4.17.1
GO_MIGRATE_DOCKER_IMAGE_FROM=migrate/migrate:v4.17.1
# GO_MIGRATE_DOCKER_NETWORK=${APPX_ID}-local-network
# GO_MIGRATE_DB_DSN=POSTGRES_DB_DSN
GO_MIGRATE_DB_TABLE=${APPX_DB_MIGRATIONS_TABLE}
# GO_MIGRATE_DB_SRC_DIR=${APPX_WORK_DIR}/migrations

## REST API Builder:
# OPENAPI_SRC_DIR=./docs/api-src
# OPENAPI_SRC_SHARED_DIR=./docs/api-src/_shared
# OPENAPI_ASSEMBLY_DIR=./docs/api
# OPENAPI_FILENAME_PREFIX=openapi-

## GolangCI Lint:
# GOLANGCI_LINT_DOCKER_CONTEXT_DIR=${MRCMD_PLUGINS_DIR}/golangci-lint/docker
# GOLANGCI_LINT_DOCKER_DOCKERFILE=NULL
GOLANGCI_LINT_DOCKER_IMAGE=p/golangci-lint:1.59.1
GOLANGCI_LINT_DOCKER_IMAGE_FROM=golangci/golangci-lint:v1.59.1-alpine
# GOLANGCI_GOPATH_DIR=./.cache/golang
# GOLANGCI_LINT_CACHE_DIR=./.cache/golangci-lint

## Plantuml:
# PLANTUML_DOCKER_CONTEXT_DIR=${MRCMD_PLUGINS_DIR}/plantuml/docker
# PLANTUML_DOCKER_DOCKERFILE=NULL
PLANTUML_DOCKER_IMAGE=p/plantuml:1.2024.5
PLANTUML_DOCKER_IMAGE_FROM=plantuml/plantuml:1.2024.5
PLANTUML_SOURCE_DIR=./docs/diagrams
PLANTUML_OUTPUT_IN_DOCKER_DIR=./resources
PLANTUML_OUTPUT_FORMAT=svg

## Traefik:
# TRAEFIK_DOCKER_CONTAINER=${APPX_ID}-proxy-traefik
# TRAEFIK_DOCKER_CONTEXT_DIR=${MRCMD_PLUGINS_DIR}/traefik/docker
# TRAEFIK_DOCKER_DOCKERFILE=NULL
# TRAEFIK_DOCKER_COMPOSE_CONFIG_DIR=${MRCMD_PLUGINS_DIR}/traefik/docker-compose
TRAEFIK_DOCKER_IMAGE=p/traefik:2.11.2
TRAEFIK_DOCKER_IMAGE_FROM=traefik:2.11.2
# TRAEFIK_PROXY_PUBLIC_PORT=127.0.0.1:80
# TRAEFIK_API_INTERNAL_PORT=19090
# TRAEFIK_WEB_DOMAIN=traefik.local